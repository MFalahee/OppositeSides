/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Akshat (https://sketchfab.com/shooter24994)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/earth-41fc80d85dfd480281f21b74b2de2faa
title: Earth
*/

import * as THREE from 'three'
import * as React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber'

type GLTFResult = GLTF & {
  nodes: {
    Sphere_Material002_0: THREE.Mesh
  }
  materials: {
    ['Material.002']: THREE.MeshStandardMaterial
  }
}
const GlobeModel: React.FC<JSX.IntrinsicElements['group']> = (props) => {
  const group = React.useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('scene.gltf') as GLTFResult
  useFrame(() => {group.current.rotation.x += 0.001 
                  group.current.rotation.y += 0.001})

  if (nodes && materials) {
  return (
    <group  ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.Sphere_Material002_0.geometry} material={materials['Material.002']} />
          </group>
        </group>
      </group>
    </group>
  )} else {
    return null
  }
}

useGLTF.preload('scene.gltf')

export default GlobeModel;